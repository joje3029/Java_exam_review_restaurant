//각각의 사람이 배달음식을 주문할 때, 각자의 상황과 기호에 따라 적절한 음식점과 음식이 배달되게 해주세요.
class Main {
	public static void main(String[] args) {
		사람 a김철수 = new 사람();
		a김철수.이름 = "김철수";
		a김철수.전화번호 = "010-1234-1234";
		a김철수.a좋아하는_음식점 = new 영화반점();
		a김철수.선호하는_음식의_매운정도 = "매운";
		a김철수.선호하는_음식 = "짬뽕";
		
		사람 a김영희 = new 사람();
		a김영희.이름 = "김영희";
		a김영희.전화번호 = "010-4321-4321";
		a김영희.a좋아하는_음식점 = new 북경반점();
		a김영희.선호하는_음식의_매운정도 = "안매운";
		a김영희.선호하는_음식 = "짬뽕";
		
		a김철수.배달_음식_주문하다();
		// 영화반점에서 김철수(010-1234-1234)에게 매운 짬뽕(을)를 배달합니다.
		
		a김영희.배달_음식_주문하다();
		// 북경반점에서 김영희(010-4321-4321)에게 안매운 짬뽕(을)를 배달합니다.
		
		a김영희.a좋아하는_음식점 = a김철수.a좋아하는_음식점;
		a김영희.선호하는_음식의_매운정도 = "아주 매운";
		a김영희.선호하는_음식 = "짜장";
		
		a김영희.배달_음식_주문하다();
		// 영화반점에서 김영희(010-4321-4321)에게 아주 매운 짜장(을)를 배달합니다.
	}
}

class 사람{
	
	String 이름;
	String 전화번호;
	String 선호하는_음식의_매운정도;
	String 선호하는_음식;
	음식점 a좋아하는_음식점; //변수가 하나인데 서로 다른 두 객체를 연결해야함. => 둘을 받을 수 있는 상위 개념을 만들어 놓고 상속받게 해야함.
	
	void 배달_음식_주문하다() {
		a좋아하는_음식점.주문(this.이름, this.전화번호, this.선호하는_음식의_매운정도, this.선호하는_음식);
		//주문메서드에 일을 넘겨주되 매개변수로 받아서 이러함. 
		
		//System.out.printf("영화반점에서 %s (%s)에게 %s %s(을)를 배달합니다.\n", 이름, 전화번호, 선호하는_음식의_매운정도, 선호하는_음식);
	} // "음식점 자리에 %s로 구멍 뚫고 a좋아하는 음식점을 넣으면 객체의 주소가 뒤에 붙어 나옴. => 배달_음식_주문하다 에 주문이라는 메서드를 만들어서 일을 시키는거임."
		
}

//class 김철수 extends 사람{ //소민아 class는 NEW 객체만 만드는거야 왜 맨날 변수명을 갖다 쳐넣어서 이사단을 만들어!
//	String 이름 = "김철수 ";
//	String 전화번호 = "010-4321-4321";
//	String 선호하는_음식의_매운정도 = "안매운";
//	String 선호하는_음식 = "짬뽕";		
//	void 배달_음식_주문하다() {
//		
//	}
//	
//}
//
//class 김영희 extends 사람{
//	String 이름 = "김영희";
//	String 전화번호 = "010-4321-4321";
//	String 선호하는_음식의_매운정도 = "안매운";
//	String 선호하는_음식 = "짬뽕";	
//	음식점 a좋아하는_음식점 = "북경반점";
//	void 배달_음식_주문하다() {
//		
//	}
//}

class 영화반점 extends 음식점{
	public void 주문(String 이름, String 전화번호, String 선호하는_음식의_매운정도, String 선호하는_음식) {
		System.out.printf("영화반점에서 %s (%s)에게 %s %s(을)를 배달합니다.\n", 이름, 전화번호, 선호하는_음식의_매운정도, 선호하는_음식);
	}
}

class 북경반점 extends 음식점{
	public void 주문(String 이름, String 전화번호, String 선호하는_음식의_매운정도, String 선호하는_음식) {
		System.out.printf("북경반점에서 %s (%s)에게 %s %s(을)를 배달합니다.\n", 이름, 전화번호, 선호하는_음식의_매운정도, 선호하는_음식);
	}
}

class 음식점{

	public void 주문(String 이름, String 전화번호, String 선호하는_음식의_매운정도, String 선호하는_음식) {
		
	}
	
}